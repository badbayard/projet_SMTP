Axel LASSEUR & Yannis HUTT

-- INTRODUCTION --

Ce projet est divisé en 2 programmes, l'un pour le client, l'autre pour le serveur avec leur makefile respectif a la racine de chaque repertoire les contenants. Les noms de fonctions et de variables, la plupart des commentaires ainsi que l'interface sont en anglais par soucis de convention, un peu par habitude aussi et pour nous améliorer continuellement en anglais.

./
|-- client/
|	|-- Makefile       <-- Makefile du client
|	|-- src/
|	|	|-- main.cpp 
|	|	|-- Mail.cpp
|	|	|etc...
|	|
|	|-- bin/
|	|	`-- client     <-- executable client
|	|etc...
|
`-- server/
	|-- Makefile       <-- Makefile du serveur
	|-- src/
	|	|-- main.cpp
	|	|-- server.cpp
	|	|etc...
	|
	|-- bin/
	|	|-- server 	   <-- executable serveur
	|	`-- users.list <-- liste des utilisateurs du domaine (local users)
	|etc...

Bref, deux projets séparés suivant une architecture de fichiers traditionnelle.


-- TABLE DES MATIERES --

1.0. CLIENT
	1.1. Dépendances
	1.2. Utilisation
	1.3. Explications
	1.4. Exemples d'utilisation

2.0. SERVEUR
	2.1. Utilisation
	2.2. Explications
	2.3. Exemples d'utilisation


1.0. -- CLIENT --

1.1. DEPENDANCES:

Pour le client, vous aurez besoin des bibliotheques suivantes :
gtkmm v2.4 - pour la GUI
magic      - reconnaissance du type MIME d'un fichier
b64        - convertion de fichier binaires en base 64

$ sudo apt-get install libgtkmm-2.4-dev libmagic-dev

libb64 se trouve dans le repertoire client/src/libb64-1.2, normalement ça devrait marcher tel quel sinon :
$ cd client/src/libb64-1.2 && make


1.2. UTILISATION:

le client se lance de cette façon :
$ ./client <server>:<port>

options (vous pouvez les retrouver en lançant $ ./client --help) :
-f ou --from    : adresse e-mail de l'expéditeur
-t ou --to      : adresse(s) e-mail(s) de(s) destinataire(s) 
				  séparer les destinataires par des virgules ',' sans espace
-s ou --subject : objet/titre du mail
-c ou --content : contenu du mail


1.3. EXPLICATIONS:

Si ces 4 options sont données au programme, alors il envera directement le mail, si au moins une option manque, alors une interface s'ouvrira pour vous permettre de saisir directement dans des champs.
Petit bonus toutefois, a partir de l'interface graphique il est possible d'intégrer une piece jointe au mail (tout type de fichier aprioris).
Le mail est automatiquement daté lors de l'envoi.
Pour envoyer un mail depuis l'interface graphique, il faut au moins remplir les champs "from" et "to".
Il arrive parfois que le client crash á cause du server X, cela pourrait provenir de gtkmm, nous n'avons pas réussis á faire un fork correctement pour éviter l'interface "d'attendre" lors de l'envoie du mail (il faut passer par des procédures spéciales de la bibliotheque). Ou peut-etre est-ce ma distribution, j'ai une erreur 'Gtk-Message: Failed to load module "pantheon-filechooser-module"' propre a moi, qui arrive aussi au lancement d'autres programmes tels que firefox.


1.4. EXEMPLES D'UTILISATION:

(sur le server mail du docker) :
$ ./bin/client localhost:8125 -f test@gmail.com -t root@asr5.univ-lyon1.fr,chaprot@asr5.univ-lyon1.fr -s "Ceci est un titre" -c "ceci est le corps du mail :)"

Pour lancer l'interface graphique
$ ./bin/client localhost:8125 -f test@gmail.com -t root@asr5.univ-lyon1.fr,chaprot@asr5.univ-lyon1.fr



2.0. -- SERVEUR --

2.1. UTILISATION:

Le serveur fonctionne par défaut uniquement en local, il requiert en parametres son port et son domaine local. Il peut prendre en parametre optionnel la destination du serveur en Relay Host

$ ./server <port> <domaine> [<server>:<port>]optional


2.2. EXPLICATIONS:

Si on ajoute un autre serveur en 3eme argument, il va alors servir de Relay Host, mais il va toutefois toujours stoquer les messages en local si ceux si sont destinés au domaine local et que l'utilisateur est présent dans le fichier users.list (1 utilisateur pour 1 ligne sans espace)
ATTENTION, pour avoir acces au fichier users.list, les serveur doit etre lancé depuis le repertoire bin

Lors du traitement d'un client, vous pourrez observer "[n]" au début de chaque ligne, étant donné que le serveur peut traiter plusieurs clients en paralléle, il leur attribu un id á chaque nouveau client pour pouvoir mieux les identifier á la lecture.


2.3. EXEMPLES D'UTILISATION:

Serveur local uniquement
$ ./server 1234 local.com

Utilisation hybride domaine local + Relay Host mode (avec le serveur du docker) :
$ ./server 1234 local.com localhost:8125

On peut tester son comportement en lançant le client en parallele :
$ ./bin/client localhost:1234 -f test@test.org -t stallman@local.com,wrongaddress@local.com,root@asr5.univ-lyon1.fr -s sujet -c content



Merci d'avoir lu ⊂(◉‿◉)つ

		Axel LASSEUR && Yannis HUTT